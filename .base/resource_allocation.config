// Resources allocation -- DO NOT TOUCH --
params.memory_buffer_gb = 10

import com.sun.management.OperatingSystemMXBean
import java.lang.management.ManagementFactory
if ( !executor || executor.name == "local" ) {
    def count = 0
    def avail_cpus = 0
    while ( count < 10 ) {
        check_cpus = Runtime.runtime.availableProcessors()
        avail_cpus = (check_cpus > avail_cpus) ? check_cpus : avail_cpus
        count += 1
    }

    if ( params.processes ) {
        if(params.processes > avail_cpus) {
            throw new RuntimeException(
                "Number of processes higher than available CPUs."
            )
        }
        else if(params.processes < 1) {
            throw new RuntimeException(
                "When set, number of processes must be >= 1 " +
                "and smaller or equal to the number of CPUs."
            )
        }
    }
    else {
        params.processes = avail_cpus
    }

    def sysmem = ((OperatingSystemMXBean) ManagementFactory.getOperatingSystemMXBean()).getTotalPhysicalMemorySize() / 1073741824
    if ( params.memory_buffer_gb )
        sysmem -= params.memory_buffer_gb

    executor.$local.memory = "${sysmem}GB"
    executor.$local.cpus = params.processes
}